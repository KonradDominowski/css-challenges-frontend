import { getServerSession } from "next-auth/next";
import type { Metadata } from "next";
import { Suspense } from "react";

import { authOptions } from "./api/auth/[...nextauth]/route";
import { LoadingMainPage } from "./components/Loadings/Index";
import Title from "./components/Title";
import Body from "./components/Body";
import fetchUserTasks from "@/functions/fetchUserTasks";

export const metadata: Metadata = {
  title: "CSS Challenges",
  description: "Generated by create next app",
  other: {
    "google-site-verification": process.env.GOOGLE_SITE_VERIFICATION!,
  },
};

// Why use Suspense instead of Next.js loading.tsx?
// loading.tsx is loaded for all children, so even a few routes deep the loading screen is shown from the route many routes above
// TODO - Flash of unstyled content (FOUC) - fix it
export default function Home() {
  return (
    <>
      <Title />
      <Suspense fallback={<LoadingMainPage />}>
        <Main />
      </Suspense>
    </>
  );
}

async function Main() {
  const session = await getServerSession(authOptions);

  let tasksData;

  if (session?.accessToken) {
    tasksData = await fetchUserTasks(session.accessToken);
  }

  const topicsResponse = await fetch(`${process.env.BACKEND_URL}/api/topics/`, { next: { tags: ["topics"] } });
  const topics = await topicsResponse.json();

  return <Body session={session} topics={topics} tasksData={tasksData} />;
}
